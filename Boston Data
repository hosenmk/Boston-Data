import pandas as pd
df = pd.read_csv('Boston.csv')

#adding new rows
Newrows=[[0.069,10,2.3,0,0.53,6.5,65.2,4.01,1,290,15,395,4.9,24],[1.69,11,2.31,0,0.51,6.51,65.21,4.11,1,291,16,396,4.91,25.3],
[1.68,12,2.41,0,0.61,6.61,65.11,4.01,1,292,14,391,4.21,25.2],[1.67,13,2.51,0,0.41,6.51,65.31,4.21,1,293,15,393,4.31,25.1],
[1.66,14,2.41,0,0.71,6.51,65.41,4.11,1,294,17,392,4.41,25.2]]

df1=pd.DataFrame(Newrows,columns = ['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',
'ptratio', 'b', 'lstat', 'medv'])

Newdf=pd.concat([df, df1],ignore_index=True)
Newdf.to_csv('ModifiedBoston.csv', index=False)

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import seaborn as sns

df = pd.read_csv("ModifiedBoston.csv)
df.describe()

plt.figure(figsize=(10, 6))
import matplotlib.pyplot as plt
plt.bar(df.crim,df.medv,color='blue')
plt.xlabel('Crime Rate')
plt.ylabel('Price of the House')
plt.title('Crime rate vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.indus,df.medv,color='indigo')
plt.xlabel('Non-Retail business proportion')
plt.ylabel('Price of the House')
plt.title('Non-Retail business proportion vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.nox,df.medv,color='violet')
plt.xlabel('Nitric Oxide concentration')
plt.ylabel('Price of the House')
plt.title('Nitric Oxide concentration vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.rm,df.medv,color='green')
plt.xlabel('Avg. No. of Rooms')
plt.ylabel('Price of the House')
plt.title('Avg. No. of Rooms vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.ptration,df.medv,color='grey')
plt.xlabel('Pupil-Teacher ratio')
plt.ylabel('Price of the House')
plt.title('Pupil Teacher ratio vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.lstat,df.medv,color='orange')
plt.xlabel('% lower population')
plt.ylabel('Price of the House')
plt.title('% lower population vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df.dis,df.medv)
plt.xlabel('Distance')
plt.ylabel('Price of the House')
plt.title('Distance vs Price of house')
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(df['rm'], bins=30, kde=True)
plt.title('Distribution of Rooms (RM) in Boston Housing Data')
plt.xlabel('Number of Rooms (RM)')
plt.ylabel('Frequency')

correlation_matrix = df.corr()
plt.figure(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix of Boston Housing Data')
plt.show()

df = pd.read_csv('Boston.csv')
def category_label(medv):
  if medv > 20:
    return 1
  else:
    return 0
df['category'] = df['medv'].map(category_label)

df['category'] = df['medv'].map(category_lable)
df.drop(columns=["medv"], inplace=True)
df['category']=df['category'].map({0:'Low', 1:'High'})
sns.pairplot(df, hue='category', plot_kws={'alpha': 0.5}, palette={'HIgh':'blue', 'Low': 'red'})
plt.subtitle('Pair Plots (Boston Data Variables)', y=1.02)
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlob.mlab as mlab
import seaborn as sns
import statsmodels.api as sm
from sklearn.linear_model import LogisticRegression

df = pd.read_csv('ModifiedBoston.csv')
#Modified with five new rows as directed

#Mapping Function
def category_label(medv):
  if medv > 20:
    return 1
  else:
    return 0
df['category'] = df['medv'].map(category_label)
df.drop(columns=['medv'], inplace=True)

